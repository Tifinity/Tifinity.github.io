<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>硬盘 on Infinit</title>
    <link>http://tifinity.github.io/tags/%E7%A1%AC%E7%9B%98/</link>
    <description>Recent content in 硬盘 on Infinit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 17 Apr 2020 13:02:09 +0800</lastBuildDate><atom:link href="http://tifinity.github.io/tags/%E7%A1%AC%E7%9B%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux磁盘空间监控</title>
      <link>http://tifinity.github.io/2020/linux%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Fri, 17 Apr 2020 13:02:09 +0800</pubDate>
      
      <guid>http://tifinity.github.io/2020/linux%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E7%9B%91%E6%8E%A7/</guid>
      <description>Linux磁盘空间监控  开发当牛 测试做马 测试开发 当牛做马
 我要做的工作基本上都是学习这位天外归云大佬的：天外归云的博客，上面引用的也是大佬首页上的话，觉得很有意思hh。下面正式开始。
获取磁盘信息 首先Linux查看磁盘空间的命令有两个：
  du（disk usage 硬盘使用率）：显示每个文件和目录占用的空间，如果直接执行du，你就会看到一长串文件刷出来。
  df （disk free 空余硬盘）：显示磁盘分区上可以使用的磁盘空间。
  那么df就可以满足我们的需求，现在在python中调用df：
可以用commands或者subprocess，commands模块在Python3中被subprocess取代。
import subprocess code = subprocess.call([&amp;#39;df&amp;#39;]) print(code) # 输出与在命令行中使用df一样，如果执行成功的话code的值是0 使用subprocess确实能够输出与df一样的结果，实际上就相当于创建了一个子进程执行了df，不过这个结果好像获取不到，没法进行操作，因为subprocess.call()只返回一个状态码表示完成情况，需要想别的办法。
第一种方法 就是用上面的df指令，并想办法获取它的结果来进行操作。
目前对Linux的指令还不熟悉，挖个坑，以后补充·~·
第二种方法 其实Python中的os包已经有方法可以得到磁盘信息了。
 在所给的路径上执行 statvfs() 系统调用。返回值是一个对象，其属性描述了所给路径上的文件系统，并且与 statvfs 结构体的成员相对应，即：f_bsize, f_frsize, f_blocks, f_bfree, f_bavail, f_files, f_ffree, f_favail, f_flag, f_namemax, f_fsid。
 该方法的使用参考菜鸟教程和中文文档
def get_disk_usage_percent(): statvfs = os.statvfs(&amp;#39;/&amp;#39;) # f_frsize: fragment size碎片大小 # f_blocks: 文件系统数据块总数 # f_bfree: 文件系统可用数据块数 total_disk_space = statvfs.</description>
    </item>
    
  </channel>
</rss>
